%% Clean environment
clc;
clear all;
close all;

%% load data
raw_data = readtable('../data/record-[2018.11.16-10.16.29].csv');

t = table2array(raw_data(:, 1));
channels = table2array(raw_data(:, 3:end-3));
L = height(raw_data);
Fs = 512;
T = 1/Fs;

clear raw_data;

%% Display signals

signalPlot( channels, t, 'time (s)', 'channel signal', 'Time domain');

%% FFT analysis
fft_channels = fft(channels);
P2 = abs(fft_channels/L);
P1 = P2(1:L/2+1, :);
P1(2:end-1, :) = 2*P1(2:end-1, :);

f = Fs*(0:(L/2))/L;

signalPlot(P1, f, 'f (Hz)', '|P1(f)|', 'Frequency Domain');

%% Filter Design

n = 2000;
Wn = [4 7]*2/Fs;
firfilt = fir1(n, Wn, 'bandpass');
figure;
freqz(firfilt,1,1024)

fdelay = mean(grpdelay(firfilt));

%% Filter Data
filtered_signal = filter(firfilt, 1, channels);
t_filt = t(,:)

signalPlot( filtered_signal, t, 'time (s)', 'channel signal', 'Filtered Signal Time domain');

%% FFT analysis for filtered signal
filtered_fft_channels = fft(filtered_signal);
filtered_P2 = abs(filtered_fft_channels/L);
filtered_P1 = filtered_P2(1:L/2+1, :);
filtered_P1(2:end-1, :) = 2*filtered_P1(2:end-1, :);

signalPlot(filtered_P1, f, 'f (Hz)', '|P1(f)|', 'Frequency Domain');

%%

function signalPlot(signal, t, xtitle, ytitle, bigtitle)
    n = size(signal, 2);
    nyfig = floor(sqrt(n));
    nxfig = ceil(n/nyfig);
    figure;
    for i = 1:n
        subplot(nxfig,nyfig,i);
        plot(t, signal(:, i));
        title(strcat('Channel ', num2str(i)))
        xlabel(xtitle)
        ylabel(ytitle)
    end
    sgtitle(bigtitle)
end